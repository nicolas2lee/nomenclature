ext {
    springBootVersion = '2.0.3.RELEASE'
    lombokVersion = '1.18.0'
    jacksonVersion = '2.9.6'
    javaInjectVersion = '1'
    //TODO should check the logback version in domain & the version in spring boot
    logbackVersion = '1.2.3'
    mybatisSpringBootVersion = '1.3.2'
    simpleJsonVersion = '1.1.1'
    swaggerVersion = '2.7.0'
    mysqlVersion = '8.0.11'
    servletVersion = '3.1.0'
    igniteVersion = '2.5.0'

    junitVersion = '4.12'
    mockitoVersion = '2.15.0'
    cucumberVersion = '1.2.5'
    assertjVersion = '3.10.0'
    h2Version = '1.4.195'

    //Development
    springBootStarterDependency = "org.springframework.boot:spring-boot-starter"
    lombokDependency = "org.projectlombok:lombok:${lombokVersion}"
    jacksonCoreDependency = "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    jacksonYamlDependency = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}"// https://mvnrepository.com/artifact/org.mapstruct/mapstruct-processor
    simpleJson = "com.googlecode.json-simple:json-simple:${simpleJsonVersion}"


    //Testing
    junitDependency =  "junit:junit:${junitVersion}"
    mockitoDependency = "org.mockito:mockito-core:${mockitoVersion}"
    springBootTestDependency = "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    assertjDependency = "org.assertj:assertj-core:${assertjVersion}"
    mybatisTestDependency = "org.mybatis.spring.boot:mybatis-spring-boot-starter-test:${mybatisSpringBootVersion}"


    applicationDependencies = [
            lombok: lombokDependency,
            javaxInject: "javax.inject:javax.inject:${javaInjectVersion}",
    ]

    applicationTestDependencies = [
            junit: junitDependency,
            cucumber:   "info.cukes:cucumber-junit:${cucumberVersion}",
            cucumberJava8: "info.cukes:cucumber-java8:${cucumberVersion}",
            assertj: assertjDependency
    ]

    domainDependencies = [
            lombok: lombokDependency,
            javaxInject: "javax.inject:javax.inject:${javaInjectVersion}",
            logback: "ch.qos.logback:logback-classic:${logbackVersion}",
            simpleJson: simpleJson
    ]

    domainTestDependencies = [
            junit: junitDependency,
            cucumber:   "info.cukes:cucumber-junit:${cucumberVersion}",
            cucumberJava8: "info.cukes:cucumber-java8:${cucumberVersion}",
            assertj: assertjDependency
    ]

    infraDependencies = [
            lombok: lombokDependency,
            springBootStarter: springBootStarterDependency,
            jacksonCore: jacksonCoreDependency,
            jacksonYaml: jacksonYamlDependency,
            mybatisSpringBoot: "org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisSpringBootVersion}",
            mysql: "mysql:mysql-connector-java:${mysqlVersion}",
            igniteCore: "org.apache.ignite:ignite-core:${igniteVersion}",
            igniteIndexing: "org.apache.ignite:ignite-indexing:${igniteVersion}",
            igniteSpring: "org.apache.ignite:ignite-spring:${igniteVersion}"
    ]

    infraTestDependencies = [
            junit: junitDependency,
            assertj: assertjDependency,
            h2: "com.h2database:h2:${h2Version}",
            springBootTest: springBootTestDependency,
            mybatisSpringBootTest: mybatisTestDependency

    ]

    webServicesDependencies = [
            lombok: lombokDependency,
            springBootStarter: springBootStarterDependency,
            springBootStarterWebFlux: "org.springframework.boot:spring-boot-starter-webflux:${springBootVersion}",
            swagger2: "io.springfox:springfox-swagger2:${swaggerVersion}",
            swaggerUi: "io.springfox:springfox-swagger-ui:${swaggerVersion}",
            servlet: "javax.servlet:javax.servlet-api:${servletVersion}"
    ]

    webServicesTestDependencies = [
            junit: junitDependency,
            mockito: mockitoDependency,
            springBootTest: springBootTestDependency,
            mybatisSpringBootTest: mybatisTestDependency
    ]
}

/*springBoot {
    mainClassName = 'tao.Application'
}*/
